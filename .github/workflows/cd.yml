name: CD

on:
  push:
    branches: [main]

jobs:
  build-js:
    name: Build Js/Css
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Yarn Build
        run: |
          yarn install
          yarn prod
          cat public/mix-manifest.json # See asset versions in log

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [build-js]
    # if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
      - name: copy public files to testing subdomain's root folder via ssh
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          source: "public/*,!public/index.php,!public/storage"
          target: "~/software.nupsgknust.org/"

      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |

            echo "Deploying application ..."
            cd ~/repositories/npontu-tasks

            # Add SSH-Key
            eval "$(ssh-agent -s)"
            ssh-add ~/.ssh/software-ecdsa

            # Enter maintenance mode
            (php artisan down) || true

            # Update codebase
            git checkout main
            git fetch origin main
            git reset --hard origin/main

            # Install dependencies based on lock file
            composer install --no-interaction --prefer-dist --optimize-autoloader

            # Migrate database
            php artisan migrate --force

            # Note: If you're using queue workers, this is the place to restart them.
            # ...

            # Clear cache
            php artisan optimize
            php artisan storage:link
            php artisan view:cache

            # Reload PHP to update opcache
            # echo "" | sudo -S service php7.4-fpm reload

            # Exit maintenance mode
            php artisan up

            # Log out of secure shell
            exit

            echo "Application deployed!"
